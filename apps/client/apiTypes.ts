/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/sessions/login": {
    /** Login */
    post: {
      /** Login */
      requestBody: {
        content: {
          "application/json": {
            email: string;
            password: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              id: string;
              name: string;
              surname: string;
              img: string;
              /** Format: email */
              email: string;
              password: string;
              role: "ADMIN" | "USER";
            };
          };
        };
      };
    };
  };
  "/api/sessions/logout": {
    /** Logout */
    post: {
      /** Logout */
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/sessions/me": {
    /** Get currently logged user */
    get: {
      /** Get currently logged user */
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: string;
              name: string;
              surname: string;
              img: string;
              /** Format: email */
              email: string;
              password: string;
              role: "ADMIN" | "USER";
            };
          };
        };
      };
    };
  };
  "/api/offers/": {
    /** Get all offers */
    get: {
      /** Get all offers */
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": ({
                id: string;
                name: string;
                description: string;
                categoryId: string;
                userId: string;
                count: number;
                price: number;
                isPromoted: boolean;
                updatedAt: string;
                createdAt: string;
                user: {
                  id: string;
                  name: string;
                  surname: string;
                  img: string;
                  /** Format: email */
                  email: string;
                  password: string;
                  role: "ADMIN" | "USER";
                };
                images: ({
                    id: string;
                    img: string;
                  })[];
                category: {
                  id: string;
                  name: string;
                  updatedAt: string;
                  createdAt: string;
                  img: string;
                };
              })[];
          };
        };
      };
    };
    /** Create offer */
    post: {
      /** Create offer */
      requestBody: {
        content: {
          "application/json": {
            name: string;
            description: string;
            categoryId: string;
            count: number;
            price: number;
            images: ({
                data: Record<string, never>;
                filename: string;
                encoding: string;
                mimetype: string;
                limit: boolean;
              })[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              id: string;
              name: string;
              description: string;
              categoryId: string;
              userId: string;
              count: number;
              price: number;
              isPromoted: boolean;
              updatedAt: string;
              createdAt: string;
              user: {
                id: string;
                name: string;
                surname: string;
                img: string;
                /** Format: email */
                email: string;
                password: string;
                role: "ADMIN" | "USER";
              };
              images: ({
                  id: string;
                  img: string;
                })[];
              category: {
                id: string;
                name: string;
                updatedAt: string;
                createdAt: string;
                img: string;
              };
            };
          };
        };
      };
    };
  };
  "/api/offers/{id}": {
    /** Get offer by id */
    get: {
      /** Get offer by id */
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: string;
              name: string;
              description: string;
              categoryId: string;
              userId: string;
              count: number;
              price: number;
              isPromoted: boolean;
              updatedAt: string;
              createdAt: string;
            };
          };
        };
      };
    };
    /** Update offer by id */
    put: {
      /** Update offer by id */
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            description: string;
            categoryId: string;
            count: number;
            price: number;
            isPromoted: boolean;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: never;
      };
    };
    /** Delete offer by id */
    delete: {
      /** Delete offer by id */
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: never;
      };
    };
  };
  "/api/categories/": {
    /** Get all categories */
    get: {
      /** Get all categories */
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              categories: ({
                  id: string;
                  name: string;
                  updatedAt: string;
                  createdAt: string;
                  img: string;
                })[];
            };
          };
        };
      };
    };
    /** Create category */
    post: {
      /** Create category */
      requestBody: {
        content: {
          "application/json": {
            name: string;
            img: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              id: string;
              name: string;
              updatedAt: string;
              createdAt: string;
              img: string;
            };
          };
        };
      };
    };
  };
  "/api/categories/{id}": {
    /** Update category by id */
    put: {
      /** Update category by id */
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            img: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: string;
              name: string;
              updatedAt: string;
              createdAt: string;
              img: string;
            };
          };
        };
      };
    };
    /** Delete category by id */
    delete: {
      /** Delete category by id */
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: string;
              name: string;
              updatedAt: string;
              createdAt: string;
              img: string;
            };
          };
        };
      };
    };
  };
  "/api/users/register": {
    /** Create user */
    post: {
      /** Create user */
      requestBody: {
        content: {
          "application/json": {
            name: string;
            surname: string;
            img: string;
            /** Format: email */
            email: string;
            password: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              id: string;
              name: string;
              surname: string;
              img: string;
              /** Format: email */
              email: string;
              password: string;
              role: "ADMIN" | "USER";
            };
          };
        };
      };
    };
  };
  "/api/users/me": {
    /** Delete current user */
    delete: {
      /** Delete current user */
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: string;
              name: string;
              surname: string;
              img: string;
              /** Format: email */
              email: string;
              password: string;
              role: "ADMIN" | "USER";
            };
          };
        };
      };
    };
  };
  "/api/users/{id}": {
    /** Delete user by id */
    delete: {
      /** Delete user by id */
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: string;
              name: string;
              surname: string;
              img: string;
              /** Format: email */
              email: string;
              password: string;
              role: "ADMIN" | "USER";
            };
          };
        };
      };
    };
  };
  "/api/users/password": {
    /** Update password */
    put: {
      /** Update password */
      requestBody: {
        content: {
          "application/json": {
            oldPassword: string;
            newPassword: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: never;
      };
    };
  };
  "/api/users/email": {
    /** Update email */
    put: {
      /** Update email */
      requestBody: {
        content: {
          "application/json": {
            /** Format: email */
            email: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: never;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
